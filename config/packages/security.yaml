security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        user_db:
            entity:
                class: App\Entity\User
                property: email
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: user_db

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            form_login:
                provider: user_db
                login_path: adminlogin
                check_path: adminlogin
                default_target_path: /admin
        api:
            pattern: ^/api
            stateless: true
            simple_preauth:
                authenticator: App\Security\ApiKeyAuthenticator
            provider: user_db

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/admin/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: ROLE_USER }
        
    role_hierarchy:
        ROLE_USER:        ROLE_USER # user front-end
        ROLE_ADMIN:       ROLE_ADMIN # admin (minimum level to access back-office)
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN] # super-admin
